import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Copy, ChevronDown } from "lucide-react";
import { motion } from "framer-motion";

const meals = [
  "9 AM",
  "11 AM",
  "1 PM",
  "3 PM",
  "5 PM",
  "7 PM",
];

const foods = [
  "Apple Smoothie",
  "Apple & Blackberry Smoothie",
  "Dosa/Idli",
  "Chicken",
  "Banana & Nuts with Milk",
  "Ragi",
  "Strawberries",
  "Strawberries with Yogurt",
  "Fish",
  "Fish & Sweet Potato",
  "Egg and Cheese",
  "Orange Juice",
  "Rice",
];

export default function ChildFoodMenu() {
  const [selections, setSelections] = useState({});

  const handleSelection = (time, food) => {
    setSelections((prev) => ({ ...prev, [time]: food }));
  };

  const generateSummary = () => {
    let summary = "ðŸ§¸ Dua's menu\n";
    summary += meals
      .map(
        (time) => `${time}: ${selections[time] ? selections[time] : "Not Selected"}`
      )
      .join("\n");
    return summary;
  };

  const handleCopy = () => {
    navigator.clipboard.writeText(generateSummary());
  };

  return (
    <div className="flex flex-col items-center p-8 space-y-6 bg-gradient-to-br from-pink-100 to-purple-200 min-h-screen">
      <h1 className="text-4xl font-bold mb-4">ðŸ§¸ Dua's Menu</h1>

      {meals.map((time, index) => (
        <motion.div
          key={time}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: index * 0.1 }}
          className="w-full max-w-md"
        >
          <Card className="w-full shadow-lg">
            <CardContent className="p-4">
              <h2 className="text-xl font-semibold mb-2">{time}</h2>
              <div className="relative">
                <select
                  className="w-full p-2 rounded border appearance-none bg-white shadow-sm focus:ring-2 focus:ring-purple-300"
                  value={selections[time] || ""}
                  onChange={(e) => handleSelection(time, e.target.value)}
                >
                  <option value="">Select Food</option>
                  {foods.map((food) => (
                    <option key={food} value={food}>
                      {food}
                    </option>
                  ))}
                </select>
                <ChevronDown className="absolute right-3 top-3 text-gray-400 pointer-events-none" size={20} />
              </div>
            </CardContent>
          </Card>
        </motion.div>
      ))}

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.8 }}
        className="w-full max-w-md"
      >
        <h2 className="text-xl font-semibold mb-2">Summary</h2>
        <Textarea
          className="w-full h-40 mb-2 text-gray-700 bg-white shadow-md"
          readOnly
          value={generateSummary()}
        />
        <Button onClick={handleCopy} className="w-full flex items-center gap-2 bg-purple-500 hover:bg-purple-600 text-white">
          <Copy size={16} /> Copy Summary
        </Button>
      </motion.div>
    </div>
  );
}
